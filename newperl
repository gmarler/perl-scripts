#!/usr/bin/env perl
use v5.10;
use strict;
use warnings;
use autodie qw/:all/;
use Getopt::Long;

my $as;
my $threads;
my ($dist,@dist);

GetOptions ("as=s"     => \$as,        # string
            "dist:s"   => \$dist,      # string (optional)
            "threads"  => \$threads)   # flag
or die("Error in command line arguments\n");

unless ($as) {
  die "Usage: $0 --as=<perl-version> [--dist=/path/to/perl.tar.gz] [--threads]";
}

if ($dist) {
  my $dist_path = 
    "$ENV{HOME}/perl5/perlbrew/dists/${dist}";
  if (-f $dist_path) {
    @dist = ( $dist_path );
  } else {
    die "Specified dist $dist_path doesn't exist";
  }
} else { @dist = (); }
my @args = @ARGV;
 
# --threads means do threads
my @threads = ( $threads ) ? (qw/-D usethreads/) : ();
 
$as =~ s/^5\.//;
my $perl = "5.$as";
$perl =~ s/t$//; # strip trailing "t" if any
my $lib = $as . '@std';

# Test::Base needs gmake! 
my @problem_modules = qw(
  JSON::XS
  IPC::Run
);
 
  # Task::BeLike::DAGOLDEN
my @to_install = qw(
Algorithm::C3
Algorithm::Diff
Algorithm::Diff::Callback
Any::Moose
AnyEvent
AnyEvent::HTTP
Apache::Htpasswd
Apache::LogFormat::Compiler
App::Cmd
App::cpanminus
App::perlbrew
AppConfig
Archive::Any
Archive::Any::Create
Archive::Extract
Archive::Tar
Archive::Zip
Authen::Simple
Authen::Simple::Passwd
);


 
my @no_man = qw/-D man1dir=none -D man3dir=none/;
my $ccversion = qx{cc -V 2>&1}; chomp $ccversion;
my @solaris_args =
           ( qw(-DCC=cc ), qq(-Dccversion=\"${ccversion}\"),
             qw(-Dusedtrace -Duse64bitint -Duse64bitall
                -Dsed=/usr/bin/gsed
                -Duselargefiles -Doptimize=-xO3
                -n ) );

# install perl
system( qw/perlbrew install/, @dist,
        qw/--as/, $as, $perl, @threads,
        @no_man, @solaris_args, @args );

# Lock it down
# system( qw/chmod -R a-w/, "$ENV{HOME}/perl5/perlbrew/perls/$as" );
 
# give us a local::lib for installing things
system( qw/perlbrew lib create/, $lib );
 
# let's avoid any pod tests when we try to install stuff
system( qw/perlbrew exec --with/, $lib,
        qw/cpanm -v --mirror-only --mirror/, "http://localhost:3111/",
        qw/TAP::Harness::Restricted/ );
local $ENV{HARNESS_SUBCLASS} = "TAP::Harness::Restricted";

# Install the necessary modules used in module installation activities
# so we use them for all subsequent module installs.
# This is effectively bootstrapping.

system( qw/perlbrew exec --with/, $lib,
        qw/cpanm -v --mirror-only --mirror/, "http://localhost:3111/",
        qw/ ExtUtils::MakeMaker
            ExtUtils::Install
            Module::Build
            Module::Runtime
            List::Util
          / );

# some things need forcing
system( qw/perlbrew exec --with/, $lib,
        qw/cpanm -f -v --mirror-only --mirror/, "http://localhost:3111/",
        @problem_modules );
 
# now install the rest
system( qw/perlbrew exec --with/, $lib,
        qw/cpanm -v --mirror-only --mirror/, "http://localhost:3111/",
        @to_install );

# repeat to catch any circularity problems
system( qw/perlbrew exec --with/, $lib,
        qw/cpanm -v --mirror-only --mirror/, "http://localhost:3111/",
        @to_install );
